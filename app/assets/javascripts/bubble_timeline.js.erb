var start = -1,end = -1,light=new Array(),ctime = 0,block = 0,temp;
function new_move_bubble(){
    return '<p id="new_move" class="triangle-border left" style="text-align:center;position:absolute;top:'+t_o(ctime)+'px; "><textarea cols="20" rows="4" id="new_move_content"></textarea><br/><button id="confirm">Confirm</button><button id="cancel">Cancel</button></p>'
}
function set_light_and_bubble(){
    //Remove old bubbles
    $(".triangle-border").remove();

    //Generate new bubbles
    $.each(light,function(k,v){
        script_id = v[0];
        time = v[1];
        move = v[2];
        if(k%2 ==0){
            $("#light").append(make_left_bubble(script_id, time, move));
        }else{
            $("#spotlight").append(make_right_bubble(script_id, time, move));
        }
    });

    $(".triangle-border").hover(function(){
        $(this).find('.del_bubble').show();
    },function(){
        $(this).find('.del_bubble').hide();
    });
    $(".triangle-border .del_bubble").click(function(){
        bubble = $(this).parents('p')
        script_id = bubble.attr('light_script_id');
    remove_light_script(script_id, bubble);
    });

}
function make_left_bubble(id, time, move){
    return '<p class="triangle-border right" light_script_id="'+script_id+'" style="position:absolute;top:'+t_o(time)+'px;right:52.5%;">'+move+'<span class="del_bubble"><a>x</a></span></p>'
}
function make_right_bubble(id, time, move){
    return '<p class="triangle-border left" light_script_id="'+script_id+'" style="position:absolute;top:'+t_o(time)+'px; ">'+move+'<span class="del_bubble"><a>x</a></span></p>'
}

function load_data(){
    light = my_light;
    set_light_and_bubble();
}

$(document).ready(function(){
    load_data();
    $("#circle").click(function(event){
        $("#jquery_jplayer_1").jPlayer("pause");
        $("#spotlight").append(new_move_bubble());
        $("#new_move_content").focus();
        $("#confirm").click(function(){
            var form = $("#new_light_script");
            var move = $("#new_move_content").val();
            $("#create_move_fail").remove();
            add_light_script(ctime, move);
        });
        $("#cancel").click(function(){
            $("#new_move").remove();
        });
        $("#new_move").click(function(e){
            e.stopPropagation();
        });
        event.stopPropagation()
        $(document).click(function(){
            $("#new_move").remove();
        });
    });

    $("#circle").hover(function(){
        temp = $("#circle").html();
        $("#circle").html("+");
        block = 1;
    },function(){
        $("#circle").html(temp);
        block = 0;
    });

    $("#outer").height(document.documentElement.clientHeight-23);
    $("#timeline").css("top",23-document.documentElement.clientHeight);

    $("#circle").css("top",(document.documentElement.clientHeight-23)/2-16);
    $("#line").height(document.documentElement.clientHeight-23);

    $.each($("#repeat_list").find(".repeat_item"), function(k,v){
        var repeat_item = $(v);
        repeat_item.click(function(){
            set(parseFloat(repeat_item.attr("start")), parseFloat(repeat_item.attr("end")), repeat_item.attr("name"));
        });
    });

    $("#jquery_jplayer_1").jPlayer({
        ready: function (event) {
            $(this).jPlayer("setMedia", {
                m4a: my_m4a,
                oga: my_oga,
                mp3: my_mp3,
            });
        },
        timeupdate:function(event){
            ctime = event.jPlayer.status.currentTime;
            if(start != -1 && end != -1 && ctime > end || ctime < start)
                $("#jquery_jplayer_1").jPlayer("play", start);

            update_timer_circle();

            var time = (Math.floor(event.jPlayer.status.currentTime*10)/10)*10;
            $("#timeline").offset({top : -time + (document.documentElement.clientHeight-23)/2});
        },
        solution: 'html, flash',
        swfPath: "js",
        supplied: "mp3,oga,m4a",
        preload: 'metadata',
        volume: 1.0,
        muted: false,
    });
});
function light_move_valid(time, move){
    if(move == ""){
        $("#new_move").append('<span id="create_move_fail" style="color:red">請輸入燈音內容</span>');
        return false;
    }
    if(move.length > 200){
        $("#new_move").append('<span id="create_move_fail" style="color:red">燈音內容過長</span>');
        return false;
    }
    return true;
}
function generate_data_string(form){
    var data_str = "";
    form.find("input").each(function(index, element){
        data_str += element.name+'='+element.value + '&';
    });
    data_str = data_str.substring(0, data_str.length - 1);
    return encodeURI(data_str)
}
function add_light_script(time, move){
    if(!light_move_valid(time, move)){return;}
    var form = $("#new_light_script");
    form.find("#light_script_time").val(time);
    form.find("#light_script_move").val(move);
    $.ajaxSetup({
        'beforeSend': function(xhr) {
            xhr.setRequestHeader("Accept", "text/javascript")
            xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
        }
    })
    $.ajax({
        type: "POST",
        url: "light?act_id=" + act_id,
        data: generate_data_string(form),
        success: function(script_id) {
            light.push(new Array(script_id, time, move));
            set_light_and_bubble();
            sort_light();
            update_timer_circle();
        },
        error: function() {
            $("#new_move").append('<span id="create_move_fail" style="color:red">上傳失敗</span>');
        },
    });
}
function remove_light_script(script_id, bubble){
    console.log(bubble);
    close_button = bubble.find(".del_bubble");
    console.log(close_button);
    close_button.hide();
    bubble.css({'opacity' : 0.5}).end().css({'opacity' : 0.5});
    $.ajaxSetup({
        'beforeSend': function(xhr) {
            xhr.setRequestHeader("Accept", "text/javascript")
            xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
        }
    })
    $.ajax({
        type: "DELETE",
        url: "light?act_id=" + act_id + '&script_id=' + script_id,
        data: '',
        success: function() {
            for(i = 0 ; i < light.length ; i++){
                if(light[i][0] == bubble.attr('light_script_id')){
                    light.splice(i, 1);
                    break;
                }
            }
            bubble.remove();
            sort_light();
            update_timer_circle();
        },
        error: function() {
            alert('fail');
        },
    });
}
function update_music_url(){
    var form = $('form #music_url');
    $.ajaxSetup({
        'beforeSend': function(xhr) {
            xhr.setRequestHeader("Accept", "text/javascript")
            xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
        }
    })
    $.ajax({
        type: "POST",
        url: "light/music?act_id=" + act_id,
        data: generate_data_string(form),
        success: function(url) {
            alert('Updated');
            location.reload()
        },
        error: function() {
            alert('Failed');
            $("#new_move").append('<span id="create_move_fail" style="color:red">上傳失敗</span>');
        },
    });
}
function update_timer_circle(){
    var change = 0;
    $.each(light,function(k,v){
        var t = v[1] - ctime;

        if( t > 0 && change == 0 && block == 0){
            $("#circle").html(Math.floor(t));
            change = 1;
            return;
        }
    });
    if(change == 0 && block == 0)
        $("#circle").html("");
}
function t_o(t){
    return t*10-38;
}
function set(s,e,t){
    start = s;
    end = e;
    console.log(start);
    console.log(end);
    if(s != -1){
        $("#jquery_jplayer_1").jPlayer("play", start);
    }
    $("#title").html(t);
}
function sort_light(){
    light.sort(function(a, b){
        return a[1] - b[1];
    });
}
